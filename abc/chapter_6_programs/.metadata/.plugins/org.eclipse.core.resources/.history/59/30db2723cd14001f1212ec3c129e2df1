/*
 * mergeSort.c
 *
 *  Created on: Feb 5, 2010
 *      Author: user
 */

#include "mergeSort.h"

void merge_sort(int *a, int n);

int main(void)
{
	int *a, n;

	printf("Enter size for array: ");
	scanf("%d", &n);

	a = calloc(n, sizeof(int));

	srand(time(NULL));
	fill_array(a, n);
	printf("\nArray (unsorted):\n");
	wrt_array(a, n);
	printf("\nSorting array:\n");
	merge_sort(a, n);
	printf("\nOrdered array:\n");
	wrt_array(a, n);

	free(a);

	return 0;
}

void merge_sort(int *a, int n)
{
	register int i, j, k;
	int power, m, *b;

	power = 1;
	while (power <= n)
		power *= 2;

	for (m = power; m > 1; m /= 2) {
		if (n % m)
			merge_sort(&a(n = n % m), m);
		else
			merge_sort(&a(0), m);
	}

	if ((n % 2) == 1)

	while (i >= 2) {
		i /= 2;
		++power;
	}
	printf("power: %d\n", power);

	b = calloc(n, sizeof(int));

	for (i = 1; i < n; i *= 2) {
		for (j = 0; (j + i) < n; j += 2 * i) {
			printf("i: %d\nj: %d\n", i, j);
			printf("merge(a[%d], %d, a[%d], %d)\n", j, i, j + i, i);
			merge(a + j, i, a + j + i, i, b + j);
			printf("Array b:\n");
			wrt_array(b, n);
		}
		for (k = 0; k < n; ++k)
			a[k] = b[k];
	}

	free(b);
}
