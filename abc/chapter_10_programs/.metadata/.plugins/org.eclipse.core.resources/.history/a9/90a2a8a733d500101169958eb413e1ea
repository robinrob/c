/* Demonstration of swapping the data of two nodes. */

#include <stdio.h>
#include <stdlib.h>

typedef struct {
	int id;
	char *name;
} DATA;

struct NODE {
	DATA data;
	struct NODE *next;
};

typedef struct NODE NODE;

void swap(NODE *n1, NODE *n2);
void print_list(NODE *list);
void print_node_data(NODE *n);

int main(void)
{
	NODE *list, *el2;
	list = malloc(sizeof(NODE));
	el2 = malloc(sizeof(NODE));
	list -> data.id = 0;
	list -> data.name = "Robin";
	list -> next = el2;
	el2 -> data.id = 99;
	el2 -> data.name = "Smith";
	el2 -> next = NULL;
	print_list(list);
	swap(list, list -> next);
	print_list(list);
	return 0;
}

/* Prints a list of DATA values by following the links. */
void print_list(NODE *list)
{
	while(list != NULL) {
		print_node_data(list);
		list = list -> next;
	}
	if (list == NULL) {
		printf("list NODE:  NULL\n");
	}
	else {
		printf("--MISSING NULL!--\n");
	}
	putchar('\n');
}

/* Swaps the data values of two nodes. */
void swap(NODE *n1, NODE *n2)
{
	int tmp = n1 -> data.id;
	n1 -> data.id = n2 -> data.id;
	n2 -> data.id = tmp;
}

/* Prints the data stored in the given node. */
void print_node_data(NODE *n)
{
	if (n == NULL) {
		printf("list NODE:  NULL\n");
	}
	else if (n != NULL) {
		printf("list NODE:  %s%2d%s%s\n",
								"id: ", n -> data.id,
								", name: ", n -> data.name);
	}
	else {
		printf("--MISSING NULL!--\n");
	}
}
