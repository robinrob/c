#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>

typedef struct {
	char *name;
	int age;
	int weight;
} DATA;

struct NODE {
	DATA data;
	struct NODE *prev;
	struct NODE *next;
};

/* Ease-of-use typedef */
typedef struct NODE NODE;

/* Boolean values */
typedef enum {true, false} boolean;

/* Prints a list of DATA values by following the links. */
void print_list(NODE *list);

/* Creates a DATA list from an array of DATA values
 * and returns a LINK to the head of the list.
 */
NODE* create_l(DATA *array, int n);

/* Inserts an element into the given list, at the
 * given list position (starting from 1).
 */
void insert(DATA d, NODE *list, int pos);

/* Deletes an element at the given list position
 * in the given list (starting from 1).
 */
void delete(NODE *list, int pos);

/* Returns a pointer to the NODE at the given list
 * position in the given list.
 */
NODE* get_node(NODE* list, int pos);

/* Checks to see whether a list is a cycle. */
boolean iscycle(NODE *list);


